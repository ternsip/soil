General concept:
The player spawns on planet Earth and begins to develop his own base.
He is going to face different monsters across the map and upgrade technology tree.
As soon as he evolve enough to leave the planet, other planets will be accessible trough navigation panel in the Solar system.
Each planet should keep it's own bunch of resources that is required for progress in specific branch of technology tree.

Features:
* The player has a unique login(nickname), recovery-email and password on each server he plays. It could be saved locally.
* It is possible to host server by starting dedicated server right from console or from launching it via in-game gui.
* Next player mods are available: survival, creative, debug
* Host player could make anyone to be in creative mod, which gives him invulnerability and unlimited access to resources.
* Host player could make anyone to be in debug mod, which gives him full access to game features for easier debugging
* It is possible to zoom in some range depending on the player's mod
* Player can claim some number of chunks (square area) into his base and configure access for other players to protect his property.
* Dynamic objects that can be thrown/dropped, be a part of static environment, some objects have despawn time and some is not, some can be destroyed
* Effects (short animations) can be spawned in huge amounts and can cause glowing, depending
* Average visible map size 200x150 blocks and map size 4000 x 3000 (not exact and differs for planets)
* Render blocks by rendering single quad fully stretched on view area based on visibility area, taking block indices from ssbo, taking texture by block indices from ssbo
* Items can be thrown, used, destroyed, crafted, placed as static-entity in the world
* One static-entity can occupy multiple blocks and player can destroy that entity from any side and any part
* Entity's moving types: flying (noclip|clip), walking, swimming, physical (with some geometric form)
* In case of flying, walking or swimming entity, it is controlled by AI and can be hostile of friendly to the players.
* Blocks occupy more space that grid defines in order to let them infuse with each other. Bigger blocks have semi-transparent patterned edges. (Question about blocks draw order)
* Background layer is the same as normal blocks (Question about 1.5x sized blocks) could be destroted above some level in the ground. Could be set by player as normal blocks (including all variants of blocks).
* Foreground layer of blocks must be split into two layers: first - behind the player, second - over the player. And has to be drawn exactly in that way.
* Some kinds of items can have different decorative variants but without changing gamepaly.

Server configuration:
* Server name: The name
* Difficulty: Easy, Normal, Hard
* Max players: 1-256
* Tickrate: Poor, Normal, Ultra
* Server password: qwerty
* Blocklisted users: [SillyBilly2000, Destroyer, BriefGrief69]
* Port: 27215
* Friedny fire: true/false

Settings:
* Controls: bindings for keyboard and mouse
* Graphical settings: 
* Audio settings: master, music, ambient, dialogs, effects

Player Inventory:
* Active panel 1-0
* Cells for items

Items:
* Teleport that allows to travel between planets. Consumes a lot of electricity.
* Glowing sticks which can be thrown and they should have physics i.e. rotating, bouncing etc (dynamic physical object)
* Table. It is possible to set items over it. Player can stand on it and fall down using move-down command.
* Plank. Same with table, but another geometry and does not require blocks to set it over. Only requires background.
* Chair. Player can sit on it if it's not occupied.
* Bed. Player can sleep on it.
* Static light source (Lamp, Candle, Torch). Static blocks. Emits light in (X,Y) BFS style.
* Dynamic light source. Emit light in ray-tracing style from one point. It is not attached to the blocks. But occluded by them.

Light system:
* (X,Y) BFS propogation using radius from static light sources to achieve arbicular light
* Ray tracing delta pie for directed light to achieve dynamic far-light objects i.e. flashlights, glowing movable objects
* Rough light (aura) for fast dynamic objects, just overlapping lightmask with light sprite
